# -*- coding: utf-8 -*-
"""Untitled5.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15UzTncF0wcBXoQV3-nWj21F4cS6RXztd
"""

import streamlit as st
import math

# –¢–∞–±–ª–∏—Ü—ã —Å–∫–∏–¥–æ–∫ (–æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ –¥–ª—è –æ–±–µ–∏—Ö —É—Å–ª—É–≥)
discount_table = [
    {'share': 0, 'mattress_count': 0, 'discount': 0.0377},
    {'share': 0.01, 'mattress_count': 37.01293661, 'discount': 0.0464},
    {'share': 0.02, 'mattress_count': 74.02587322, 'discount': 0.0524},
    {'share': 0.03, 'mattress_count': 111.0388098, 'discount': 0.0571},
    {'share': 0.04, 'mattress_count': 148.0517464, 'discount': 0.0611},
    {'share': 0.05, 'mattress_count': 185.0646831, 'discount': 0.0645},
    {'share': 0.06, 'mattress_count': 222.0776197, 'discount': 0.0675},
    {'share': 0.07, 'mattress_count': 259.0905563, 'discount': 0.0703},
    {'share': 0.08, 'mattress_count': 296.1034929, 'discount': 0.0728},
    {'share': 0.09, 'mattress_count': 333.1164295, 'discount': 0.0752},
    {'share': 0.10, 'mattress_count': 370.1293661, 'discount': 0.0774},
    {'share': 0.11, 'mattress_count': 407.1423027, 'discount': 0.0794},
    {'share': 0.12, 'mattress_count': 444.1552393, 'discount': 0.0813},
    {'share': 0.13, 'mattress_count': 481.1681759, 'discount': 0.0832},
    {'share': 0.14, 'mattress_count': 518.1811125, 'discount': 0.0849},
    {'share': 0.15, 'mattress_count': 555.1940492, 'discount': 0.0866},
    {'share': 0.16, 'mattress_count': 592.2069858, 'discount': 0.0882},
    {'share': 0.17, 'mattress_count': 629.2199224, 'discount': 0.0897},
    {'share': 0.18, 'mattress_count': 666.232859, 'discount': 0.0911},
    {'share': 0.19, 'mattress_count': 703.2457956, 'discount': 0.0926},
    {'share': 0.20, 'mattress_count': 740.2587322, 'discount': 0.0926}
]

def calculate_k2(mattress_count):
    """–†–∞—Å—á–µ—Ç –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞ —Å–∫–∏–¥–∫–∏ k2 –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –º–∞—Ç—Ä–∞—Å–æ–≤ (—Ç–æ—á–Ω–∞—è –ª–æ–≥–∏–∫–∞ Excel)"""
    d = mattress_count / 3701
    rounded_d = math.ceil(d * 100) / 100  # –û–ö–†–£–ì–õ–í–í–ï–†–•(d;2)

    # –ù–∞—Ö–æ–¥–∏–º —Å—Ç—Ä–æ–∫—É —Å rounded_d –≤ —Ç–∞–±–ª–∏—Ü–µ
    found_row = None
    for row in discount_table:
        if abs(row['share'] - rounded_d) < 0.0001:
            found_row = row
            break

    if found_row is None:
        return 0.0377  # –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é

    # –í–ü–†(–û–ö–†–£–ì–õ–í–í–ï–†–•(d;2);A29:C49;2;0) < mattress_count
    if found_row['mattress_count'] < mattress_count:
        return found_row['discount']
    else:
        # –ò—â–µ–º –ø—Ä–µ–¥—ã–¥—É—â—É—é —Å—Ç—Ä–æ–∫—É (–ò–ù–î–ï–ö–°(C29:C49; –ü–û–ò–°–ö–ü–û–ó(–û–ö–†–£–ì–õ–í–í–ï–†–•(d;2);A29:A49;0)-1))
        current_index = discount_table.index(found_row)
        if current_index > 0:
            return discount_table[current_index - 1]['discount']
        else:
            return found_row['discount']

def calculate_k1(time_to_departure):
    """–†–∞—Å—á–µ—Ç –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞ k1"""
    return 1 + 0.15 * (105 - time_to_departure) / 105

def calculate_k3(distance, mattress_count):
    """–†–∞—Å—á–µ—Ç –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞ k3 –¥–ª—è —É—Ç–∏–ª–∏–∑–∞—Ü–∏–∏"""
    base_k3 = 500 + (max(0, distance - 1000) * 0.5)

    # –î–æ–±–∞–≤–ª—è–µ–º 26 —Ä—É–±–ª–µ–π –∑–∞ –∫–º –Ω–∞ –∫–∞–∂–¥—ã–π –º–∞—Ç—Ä–∞—Å
    if mattress_count > 0:
        return base_k3 + (26 * distance)
    return base_k3

# –§–ò–ö–°–ò–†–û–í–ê–ù–ù–ê–Ø –°–¢–ê–ù–î–ê–†–¢–ù–ê–Ø –¶–ï–ù–ê
STANDARD_PRICE = 1600

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title="–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —É—Å–ª—É–≥",
    page_icon="üìä",
    layout="wide"
)

# CSS –¥–ª—è –∫–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏–∏ - –£–ë–†–ê–ù–ê –ü–ê–ù–ï–õ–¨, –î–û–ë–ê–í–õ–ï–ù –°–î–í–ò–ì –í–í–ï–†–•
st.markdown("""
<style>
    /* –ë–µ–ª—ã–π —Ü–≤–µ—Ç –¥–ª—è –≤—Å–µ—Ö —Ç–µ–∫—Å—Ç–æ–≤ –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –æ–±–ª–∞—Å—Ç–∏ */
    .main .block-container {
        color: #ffffff;
    }

    /* –ë–µ–ª—ã–π —Ü–≤–µ—Ç –¥–ª—è –≤—Å–µ—Ö –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –∏ —Ç–µ–∫—Å—Ç–∞ */
    .main-header, .section-header, .stRadio label, .stSlider label,
    .stNumberInput label, .stExpander label, .stMarkdown, .stText {
        color: #ffffff !important;
    }

    /* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è */
    .main-header {
        font-size: 32px;
        font-weight: bold;
        text-align: center;
        margin-bottom: 30px;
    }

    /* –ó–∞–≥–æ–ª–æ–≤–∫–∏ —Å–µ–∫—Ü–∏–π */
    .section-header {
        font-size: 18px;
        font-weight: bold;
        margin-bottom: 15px;
    }

    /* –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ - –ë–ï–ó –ü–ê–ù–ï–õ–ò, –°–î–í–ò–ì –í–í–ï–†–• */
    .results-container {
        display: flex !important;
        flex-direction: column !important;
        justify-content: center !important;
        align-items: center !important;
        height: 400px !important;
        margin-top: -80px !important;
    }

    /* –ß–µ—Ä–Ω—ã–π —Ü–≤–µ—Ç –¥–ª—è —Ç–µ–∫—Å—Ç–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ */
    .results-container * {
        color: #000000 !important;
    }

    /* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏—Ç–æ–≥–æ–≤–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏ */
    .final-price-header {
        font-size: 28px !important;
        font-weight: bold !important;
        text-align: center !important;
        margin-bottom: 30px !important;
    }

    /* –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ü–µ–Ω—ã */
    .price-display {
        font-size: 72px !important;
        font-weight: bold !important;
        text-align: center !important;
        margin: 0 !important;
    }

    /* –°–∞–π–¥–±–∞—Ä - –±–µ–ª—ã–π —Ç–µ–∫—Å—Ç */
    .css-1d391kg, .sidebar .stMarkdown, .sidebar .stText {
        color: #ffffff !important;
    }
</style>
""", unsafe_allow_html=True)

# –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–±–µ–ª—ã–π)
st.markdown('<div class="main-header">–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —É—Å–ª—É–≥</div>', unsafe_allow_html=True)

col1, col2 = st.columns([1, 1])

with col1:
    # –¢–∏–ø —É—Å–ª—É–≥–∏ (–±–µ–ª—ã–µ –Ω–∞–¥–ø–∏—Å–∏)
    st.markdown('<div class="section-header">–¢–∏–ø —É—Å–ª—É–≥–∏:</div>', unsafe_allow_html=True)
    service_type = st.radio(
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —É—Å–ª—É–≥–∏:",
        options=['–ó–∞–º–µ–Ω–∞ –º–∞—Ç—Ä–∞—Å–æ–≤', '–£—Ç–∏–ª–∏–∑–∞—Ü–∏—è –º–∞—Ç—Ä–∞—Å–æ–≤'],
        index=0
    )

    # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∞—Ç—Ä–∞—Å–æ–≤ (–±–µ–ª—ã–µ –Ω–∞–¥–ø–∏—Å–∏)
    st.markdown('<div class="section-header">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∞—Ç—Ä–∞—Å–æ–≤:</div>', unsafe_allow_html=True)
    mattress_count = st.slider(
        "–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∞—Ç—Ä–∞—Å–æ–≤:",
        min_value=0,
        max_value=3701,
        value=100,
        step=1
    )

    # –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ (–±–µ–ª—ã–µ –Ω–∞–¥–ø–∏—Å–∏)
    st.markdown('<div class="section-header">–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –æ—Ç –ö–æ–≤—Ä–æ–≤–∞ (–∫–º):</div>', unsafe_allow_html=True)
    distance = st.slider(
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ:",
        min_value=1,
        max_value=2000,
        value=100,
        step=1
    )

    # –í—Ä–µ–º—è –¥–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è (–±–µ–ª—ã–µ –Ω–∞–¥–ø–∏—Å–∏) - —Ç–µ–ø–µ—Ä—å –º–∞–∫—Å–∏–º—É–º 105 –¥–Ω–µ–π
    st.markdown('<div class="section-header">–í—Ä–µ–º—è –¥–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è (–¥–Ω–∏):</div>', unsafe_allow_html=True)
    time_to_departure = st.slider(
        "–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π:",
        min_value=0,
        max_value=105,
        value=30,
        step=1
    )

with col2:
    # –ë–ª–æ–∫ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ - –ë–ï–ó –ü–ê–ù–ï–õ–ò, –°–î–í–ò–ì –í–í–ï–†–•
    st.markdown("""
    <div class="results-container">
    """, unsafe_allow_html=True)

    # –†–∞—Å—á–µ—Ç —Ü–µ–Ω—ã
    k1 = calculate_k1(time_to_departure)
    k2 = calculate_k2(mattress_count)

    if service_type == '–ó–∞–º–µ–Ω–∞ –º–∞—Ç—Ä–∞—Å–æ–≤':
        # –¢–∞—Ä–∏—Ñ = –°—Ç.—Ü–µ–Ω–∞ * k1 * (1-k2) + –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ * 0
        final_price = STANDARD_PRICE * k1 * (1 - k2)
    else:
        # –£—Ç–∏–ª–∏–∑–∞—Ü–∏—è: –¢–∞—Ä–∏—Ñ = –°—Ç.—Ü–µ–Ω–∞ * k1 * (1-k2) + k3
        k3 = calculate_k3(distance, mattress_count)
        final_price = STANDARD_PRICE * k1 * (1 - k2) + k3

    formatted_price = f"{final_price:,.0f} ‚ÇΩ".replace(",", " ")

    # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ —Ü–µ–Ω–∞ - —á–µ—Ä–Ω—ã–µ –∏ —Å–¥–≤–∏–Ω—É—Ç—ã –≤–≤–µ—Ä—Ö
    st.markdown('<div class="final-price-header">–ò–¢–û–ì–û–í–ê–Ø –°–¢–û–ò–ú–û–°–¢–¨</div>', unsafe_allow_html=True)
    st.markdown(f'<div class="price-display">{formatted_price}</div>', unsafe_allow_html=True)

    st.markdown("</div>", unsafe_allow_html=True)

# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–≤–µ–¥–µ–Ω–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏—è—Ö (–±–µ–ª—ã–µ –Ω–∞–¥–ø–∏—Å–∏)
with st.sidebar:
    st.markdown("### –¢–µ–∫—É—â–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:")
    st.write(f"**–£—Å–ª—É–≥–∞:** {service_type}")
    st.write(f"**–ú–∞—Ç—Ä–∞—Å—ã:** {mattress_count} —à—Ç")
    st.write(f"**–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ:** {distance} –∫–º")
    st.write(f"**–î–Ω–µ–π –¥–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è:** {time_to_departure}")

    # –î–µ—Ç–∞–ª–∏ —Ä–∞—Å—á–µ—Ç–∞
    with st.expander("–î–µ—Ç–∞–ª–∏ —Ä–∞—Å—á–µ—Ç–∞"):
        st.write(f"**–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –≤—Ä–µ–º–µ–Ω–∏ (k1):** {k1:.4f}")
        st.write(f"**–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç —Å–∫–∏–¥–∫–∏ (k2):** {k2:.4f}")
        if service_type == '–£—Ç–∏–ª–∏–∑–∞—Ü–∏—è –º–∞—Ç—Ä–∞—Å–æ–≤':
            k3_value = calculate_k3(distance, mattress_count)
            st.write(f"**–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç —É—Ç–∏–ª–∏–∑–∞—Ü–∏–∏ (k3):** {k3_value:.2f} ‚ÇΩ")
        st.write(f"**–ë–∞–∑–æ–≤–∞—è —Ü–µ–Ω–∞:** {STANDARD_PRICE} ‚ÇΩ")
        st.write(f"**–î–æ–ª—è –æ—Ç –æ–±—ä–µ–º–∞ (d):** {(mattress_count / 3701):.4f}")
        st.write(f"**–û–∫—Ä—É–≥–ª–µ–Ω–Ω–∞—è –¥–æ–ª—è:** {math.ceil((mattress_count / 3701) * 100) / 100:.2f}")